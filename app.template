{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Launches OpsWorks stack, layer, instances and associated resources to run the application.",
  "Parameters": {
    "AppName":{
      "Type":"String",
      "Default":"app",
      "Description":"What to call the app"
    },
    "DefaultOs" : {
      "Description" : "The os for the app",
      "Type" : "String",
      "Default" : "Amazon Linux"
    },
    "StorageSize" : {
      "Description" : "How big the secondary storage",
      "Type" : "Number",
      "Default": "20"
    },
    "InstanceType" : {
      "Description" : "NET Device EC2 instance type",
      "Type" : "String",
      "Default" : "t2.medium",
      "ConstraintDescription" : "must be a valid EC2 instance type."
    },
    "GitCookbookRepo": {
      "Default" : "https://github.com/barrettc/node-cookbooks.git",
      "Type" : "String",
      "Description": "Where the cookbooks are stored"
    },
    "AppRepo": {
      "Default" : "https://s3.amazonaws.com/ppm-app2/helloworld-1.0.0.tgz",
      "Type" : "String",
      "Description": "Where the npm application code is stored"
    },
    "DefaultKeyPair" : {
      "Description" : "Name of an existing EC2 KeyPair to enable SSH access to the instances",
      "Type" : "String",
      "MinLength": "1",
      "MaxLength": "64",
      "AllowedPattern" : "[-_ a-zA-Z0-9]*",
      "ConstraintDescription" : "can contain only alphanumeric characters, spaces, dashes and underscores."
    },
    "VPC" : {
      "Default":"vpc-17182872",
      "Description" : "Id of the VPC to Launch into",
      "Type" : "String"
    },
    "PrivateSubnet" : {
      "Default":"subnet-dd94d7aa",
      "Description" : "for ppm one of: subnet-cc23ade7,subnet-53642724",
      "Type" : "String"
    },
    "PublicSubnet" : {
      "Default":"subnet-db94d7ac",
      "Description" : "for ppm one of: subnet-cc23ade7,subnet-53642724",
      "Type" : "String"
    }
  },
  "Resources": {
    "stack": {
      "Type": "AWS::OpsWorks::Stack",
      "Properties": {
        "Name": { "Ref": "AWS::StackName" },
        "VpcId" : { "Ref" : "VPC" },
        "DefaultSubnetId" : { "Ref" : "PrivateSubnet" },
        "DefaultSshKeyName" : { "Ref" : "DefaultKeyPair" },
        "ConfigurationManager" : {
          "Name" : "Chef",
          "Version" : "11.10"
        },
        "ServiceRoleArn": { "Fn::Join": ["", ["arn:aws:iam::", {"Ref":"AWS::AccountId"}, ":role/aws-opsworks-service-role"]] },
        "DefaultInstanceProfileArn": { "Fn::GetAtt": [ "OpsWorksInstanceProfile", "Arn" ] },
        "CustomJson": {
          "environment_variables":{
            "PORT":80
          },
          "chef_client": {
            "config": {
              "http_proxy": "http://internal-Autoscale-SquidLoa-L0MJYX6S5ZU2-1912848131.us-east-1.elb.amazonaws.com:3128",
              "https_proxy": "http://internal-Autoscale-SquidLoa-L0MJYX6S5ZU2-1912848131.us-east-1.elb.amazonaws.com:3128",
              "no_proxy": "*.amazonaws.com,10.*"
            }
          },
   
          "amazon" : {
            "region" : { "Ref" : "AWS::Region" }
          }
        },
        "DefaultOs": { "Ref": "DefaultOs" },
        "UseCustomCookbooks": true,
        "CustomCookbooksSource": {
          "Type": "git",
          "Url": { "Ref" : "GitCookbookRepo" },
          "Revision" : "master"
        }
      }
    },
    "appLayer": {
      "Type": "AWS::OpsWorks::Layer",
      "DependsOn": "app",
      "Properties": {
        "StackId": { "Ref": "stack" },
        "Name": { "Ref" : "AppName" },
        "Type": "nodejs-app",
        "Shortname": { "Ref" : "AppName" },
        "EnableAutoHealing": "true",
        "AutoAssignElasticIps": "false",
        "AutoAssignPublicIps": "false",
        "CustomSecurityGroupIds" : [          
          { "Ref" : "appProxySecurityGroup" }
        ]
      }
    },
    "app": {
      "Type": "AWS::OpsWorks::App",
      "Properties": {
        "StackId": { "Ref": "stack" },
        "Name": { "Ref" : "AppName" },
        "Type": "nodejs",
        "AppSource": {
          "Type": "archive",
          "Url": { "Ref" : "AppRepo" }
        }
      }
    },
     "appInstance": {
      "Type": "AWS::OpsWorks::Instance",
      "Properties": {
        "StackId": { "Ref": "stack" },
        "LayerIds": [ { "Ref": "appLayer" } ],
        "InstallUpdatesOnBoot": false,
        "InstanceType": { "Ref" : "InstanceType" },
        "RootDeviceType": "ebs",
        "Architecture": "x86_64",
        "SubnetId" : {"Ref" : "PrivateSubnet"}
      }
    },
    "ELB": {
      "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
      "Properties": {
        "CrossZone" : "true",
        "SecurityGroups": [ { "Ref": "ELBSecurityGroup" } ],
        "Subnets": [ { "Ref": "PublicSubnet" } ],
        "Listeners": [ {
          "LoadBalancerPort": "80",
          "InstancePort": "80",
          "Protocol": "HTTP"
        } ],
        "HealthCheck": {
          "Target": "HTTP:80/",
          "HealthyThreshold": "3",
          "UnhealthyThreshold": "5",
          "Interval": "90",
          "Timeout": "60"
        }
      }
    },

    "ELBAttachment": {
      "Type": "AWS::OpsWorks::ElasticLoadBalancerAttachment",
      "Properties": {
        "ElasticLoadBalancerName": { "Ref": "ELB" },
        "LayerId": { "Ref": "appLayer" }
      }
    },

    "ELBSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription" : "Allow inbound access to the ELB",
        "VpcId": { "Ref": "VPC" },
        "SecurityGroupIngress": [ {
          "IpProtocol": "tcp",
          "FromPort": "80",
          "ToPort": "80",
          "CidrIp": "0.0.0.0/0"
        } ],
        "SecurityGroupEgress": [ {
          "IpProtocol": "tcp",
          "FromPort": "80",
          "ToPort": "80",
          "CidrIp": "0.0.0.0/0"
        } ]
      }
    },

    "appProxySecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription" : "Allow inbound requests from the ELB to the OpsWorks instances",
        "VpcId": { "Ref": "VPC" },
        "SecurityGroupIngress": [
           {
             "IpProtocol": "tcp",
             "FromPort": "80",
             "ToPort": "80",
             "CidrIp": "0.0.0.0/0"
           },
           {
             "IpProtocol": "tcp",
             "FromPort": "22",
             "ToPort": "22",
             "CidrIp": "0.0.0.0/0"
           }
        ]
      }
    },

    "OpsWorksInstanceRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": { "Service": [ "ec2.amazonaws.com" ] },
              "Action": [ "sts:AssumeRole" ]
            }
          ]
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyName": "opsworks-service",
            "PolicyDocument": {
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": "ec2:*",
                  "Resource": "*"
                }
              ]
            }
          }
        ]
      }
    },
    "OpsWorksInstanceProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Path": "/",
        "Roles": [ { "Ref": "OpsWorksInstanceRole" } ]
      }
    }
  },
  "Outputs": {
    "StackId": { "Value": { "Ref": "stack" } }
  }
}
