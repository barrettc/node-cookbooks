{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "Two AZ, Two Tier VPC with minimal Security Groups and Network ACLs",

  "Parameters" : {

    "BastionCidrIp" : {
      "Description" : "Access CidrIp, default Everyone",
      "Type" : "String",
      "Default" :  "0.0.0.0/0"
    },
    
    "VPCCidrBlock" : {
      "Description" : "VPC CidrIp",
      "Type" : "String",
      "Default" :  "10.0.0.0/16"
    },
    
    "DMZCidrBlock1" : {
      "Description" : "DMZ CidrIp for AZ 1, default  Range 10.0.0.1 - 10.0.15.254",
      "Type" : "String",
      "Default" :  "10.0.0.0/20"
    },
    
    "DMZCidrBlock2" : {
      "Description" : "DMZ CidrIp for AZ 2, default  Range 10.0.16.1 - 10.0.31.254",
      "Type" : "String",
      "Default" :  "10.0.16.0/20"
    },
    
    "PrivateCidrBlock1" : {
      "Description" : "Private CidrIp for AZ 1, default Range 10.0.48.1 - 10.0.63.254",
      "Type" : "String",
      "Default" :  "10.0.48.0/20"
    },
    
    "PrivateCidrBlock2" : {
      "Description" : "Private CidrIp for AZ 2, default Range 10.0.64.1 - 10.0.79.254",
      "Type" : "String",
      "Default" :  "10.0.64.0/20"
    },
    
    "AvailabilityZone1" : {
      "Description" : "Availability Zone within the region to place a third of the subnets",
      "Type" : "String",
      "Default" :  "us-east-1c"
    },
    
    "AvailabilityZone2" : {
      "Description" : "Availability Zone within the region to place a third of the subnets",
      "Type" : "String",
      "Default" :  "us-east-1d"
    }
  },

  "Resources" : {
    
    "VPC" : {
      "Type" : "AWS::EC2::VPC",
      "Properties" : {
        "CidrBlock" : { "Ref" : "VPCCidrBlock" }
      }
    },

    "InternetGateway" : {
      "Type" : "AWS::EC2::InternetGateway",
      "Properties" : { 
      }
    },

    "AttachGateway" : {
       "Type" : "AWS::EC2::VPCGatewayAttachment",
       "Properties" : {
         "VpcId" : { "Ref" : "VPC" },
         "InternetGatewayId" : { "Ref" : "InternetGateway" }
       }
    },
    
    "DMZSubnet1" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "AvailabilityZone" : { "Ref" : "AvailabilityZone1" },
        "CidrBlock" : { "Ref" : "DMZCidrBlock1" }
      }
    },
    
    "DMZSubnet2" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "AvailabilityZone" : { "Ref" : "AvailabilityZone2" },
        "CidrBlock" : { "Ref" : "DMZCidrBlock2" }
      }
    },
    
    "DMZRouteTable" : {
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "VpcId" : {"Ref" : "VPC"}
      }
    },

    "DMZRoute" : {
      "Type" : "AWS::EC2::Route",
      "Properties" : {
        "RouteTableId" : { "Ref" : "DMZRouteTable" },
        "DestinationCidrBlock" : "0.0.0.0/0",
        "GatewayId" : { "Ref" : "InternetGateway" }
      }
    },

    "DMZSubnetRouteTableAssociation1" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "DMZSubnet1" },
        "RouteTableId" : { "Ref" : "DMZRouteTable" }
      }
    },

    "DMZSubnetRouteTableAssociation2" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "DMZSubnet2" },
        "RouteTableId" : { "Ref" : "DMZRouteTable" }
      }
    },

    "DMZNetworkAcl" : {
      "Type" : "AWS::EC2::NetworkAcl",
      "Properties" : {
        "VpcId" : {"Ref" : "VPC"}
      }
    },

    "DMZInNetworkHTTPAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : {"Ref" : "DMZNetworkAcl"},
        "RuleNumber" : "31000",
        "Protocol" : "6",
        "RuleAction" : "allow",
        "Egress" : "false",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : {"From" : "80", "To" : "80"}
      }
    },
    
    "DMZInNetworkHTTPSAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : {"Ref" : "DMZNetworkAcl"},
        "RuleNumber" : "31001",
        "Protocol" : "6",
        "RuleAction" : "allow",
        "Egress" : "false",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : {"From" : "443", "To" : "443"}
      }
    },
    
    "DMZInNetworkBastionRDPAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : {"Ref" : "DMZNetworkAcl"},
        "RuleNumber" : "31002",
        "Protocol" : "6",
        "RuleAction" : "allow",
        "Egress" : "false",
        "CidrBlock" : { "Ref" : "BastionCidrIp" },
        "PortRange" : {"From" : "3389", "To" : "3389"}
      }
    },
    
    "DMZInNetworkBastionSSHAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : {"Ref" : "DMZNetworkAcl"},
        "RuleNumber" : "31003",
        "Protocol" : "6",
        "RuleAction" : "allow",
        "Egress" : "false",
        "CidrBlock" : { "Ref" : "BastionCidrIp" },
        "PortRange" : {"From" : "22", "To" : "22"}
      }
    },

    "DMZInNetworkVPCAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : {"Ref" : "DMZNetworkAcl"},
        "RuleNumber" : "31004",
        "Protocol" : "-1",
        "RuleAction" : "allow",
        "Egress" : "false",
        "CidrBlock" : { "Ref" : "VPCCidrBlock" },
        "PortRange" : {"From" : "1", "To" : "65535"}
      }
    },

    "DMZInNetworkEphemeralAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : {"Ref" : "DMZNetworkAcl"},
        "RuleNumber" : "31005",
        "Protocol" : "6",
        "RuleAction" : "allow",
        "Egress" : "false",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : {"From" : "1024", "To" : "65535"}
      }
    },
    
    "DMZInNetworkUDPEphemeralAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : {"Ref" : "DMZNetworkAcl"},
        "RuleNumber" : "31006",
        "Protocol" : "17",
        "RuleAction" : "allow",
        "Egress" : "false",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : {"From" : "32768", "To" : "65535"}
      }
    },
    
    "DMZInNetworkICMPAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : {"Ref" : "DMZNetworkAcl"},
        "RuleNumber" : "31007",
        "Protocol" : "1",
        "RuleAction" : "allow",
        "Egress" : "false",
        "CidrBlock" : { "Ref" : "BastionCidrIp" },
        "Icmp" : { "Code" : "-1", "Type" : "-1"},
        "PortRange" : {"From" : "1", "To" : "65535"}
      }
    },

    "DMZInNetworkUDPDNSAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : {"Ref" : "DMZNetworkAcl"},
        "RuleNumber" : "31008",
        "Protocol" : "17",
        "RuleAction" : "allow",
        "Egress" : "false",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : {"From" : "53", "To" : "53"}
      }
    },

    "DMZOutNetworkHTTPAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : {"Ref" : "DMZNetworkAcl"},
        "RuleNumber" : "31000",
        "Protocol" : "6",
        "RuleAction" : "allow",
        "Egress" : "true",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : {"From" : "80", "To" : "80"}
      }
    },
    
    "DMZOutNetworkHTTPSAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : {"Ref" : "DMZNetworkAcl"},
        "RuleNumber" : "31001",
        "Protocol" : "6",
        "RuleAction" : "allow",
        "Egress" : "true",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : {"From" : "443", "To" : "443"}
      }
    },
    
    "DMZOutNetworkRDPAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : {"Ref" : "DMZNetworkAcl"},
        "RuleNumber" : "31002",
        "Protocol" : "6",
        "RuleAction" : "allow",
        "Egress" : "true",
        "CidrBlock" : { "Ref" : "BastionCidrIp" },
        "PortRange" : {"From" : "3389", "To" : "3389"}
      }
    },
    
    "DMZOutNetworkSSHAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : {"Ref" : "DMZNetworkAcl"},
        "RuleNumber" : "31003",
        "Protocol" : "6",
        "RuleAction" : "allow",
        "Egress" : "true",
        "CidrBlock" : { "Ref" : "BastionCidrIp" },
        "PortRange" : {"From" : "22", "To" : "22"}
      }
    },
    
    "DMZOutNetworkEphemeralAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : {"Ref" : "DMZNetworkAcl"},
        "RuleNumber" : "31004",
        "Protocol" : "6",
        "RuleAction" : "allow",
        "Egress" : "true",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : {"From" : "1024", "To" : "65535"}
      }
    },
    
    "DMZOutNetworkUDPEphemeralAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : {"Ref" : "DMZNetworkAcl"},
        "RuleNumber" : "31005",
        "Protocol" : "17",
        "RuleAction" : "allow",
        "Egress" : "true",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : {"From" : "32768", "To" : "65535"}
      }
    },
    
    "DMZOutNetworkICMPAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : {"Ref" : "DMZNetworkAcl"},
        "RuleNumber" : "31006",
        "Protocol" : "1",
        "RuleAction" : "allow",
        "Egress" : "true",
        "CidrBlock" : { "Ref" : "BastionCidrIp" },
        "Icmp" : { "Code" : "-1", "Type" : "-1"},
        "PortRange" : {"From" : "1", "To" : "65535"}
      }
    },

    "DMZOutNetworkVPCAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : {"Ref" : "DMZNetworkAcl"},
        "RuleNumber" : "31007",
        "Protocol" : "-1",
        "RuleAction" : "allow",
        "Egress" : "true",
        "CidrBlock" : { "Ref" : "VPCCidrBlock" },
        "PortRange" : {"From" : "1", "To" : "65535"}
      }
    },

    "DMZOutNetworkUDPDNSAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : {"Ref" : "DMZNetworkAcl"},
        "RuleNumber" : "31008",
        "Protocol" : "17",
        "RuleAction" : "allow",
        "Egress" : "true",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : {"From" : "53", "To" : "53"}
      }
    },

    "DMZSubnetNetworkAclAssocation1" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "DMZSubnet1" },
        "NetworkAclId" : {"Ref" : "DMZNetworkAcl"}
      }
    },

    "DMZSubnetNetworkAclAssocation2" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "DMZSubnet2" },
        "NetworkAclId" : {"Ref" : "DMZNetworkAcl"}
      }
    },

    "BastionSG" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Enable SSH or RDP access",
        "VpcId" : {"Ref" : "VPC"},
        "SecurityGroupIngress" : [ 
          { "IpProtocol" : "tcp", "FromPort" : "22", "ToPort" : "22", "CidrIp" : { "Ref" : "BastionCidrIp" } },
          { "IpProtocol" : "tcp", "FromPort" : "3389", "ToPort" : "3389", "CidrIp" : { "Ref" : "BastionCidrIp" } },
          { "IpProtocol" : "icmp", "FromPort" : "-1", "ToPort" : "-1", "CidrIp" : { "Ref" : "BastionCidrIp" } }
        ]
      }
    },

    "WebELBSG" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Web Server ELB Security group - open to all on 80 and 443",
        "VpcId" : {"Ref" : "VPC"},
        "SecurityGroupIngress" : [ 
          { "IpProtocol" : "tcp", "FromPort" : "80", "ToPort" : "80", "CidrIp" : "0.0.0.0/0" },
          { "IpProtocol" : "tcp", "FromPort" : "443", "ToPort" : "443", "CidrIp" : "0.0.0.0/0" }
        ]
      }
    },

    "WebServerSG" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Web Server Security group - open to WebELBSG on 80 and 443 - RDP and SSH access from Bastion SG",
        "VpcId" : {"Ref" : "VPC"},
        "SecurityGroupIngress" : [ 
          { "IpProtocol" : "tcp", "FromPort" : "80", "ToPort" : "80", "SourceSecurityGroupId" : { "Ref" : "WebELBSG" } },
          { "IpProtocol" : "tcp", "FromPort" : "443", "ToPort" : "443", "SourceSecurityGroupId" : { "Ref" : "WebELBSG" } },
          { "IpProtocol" : "tcp", "FromPort" : "22", "ToPort" : "22", "SourceSecurityGroupId" : { "Ref" : "BastionSG" } },
          { "IpProtocol" : "tcp", "FromPort" : "3389", "ToPort" : "3389", "SourceSecurityGroupId" : { "Ref" : "BastionSG" } },
          { "IpProtocol" : "icmp", "FromPort" : "-1", "ToPort" : "-1", "SourceSecurityGroupId" : { "Ref" : "BastionSG" } }
        ]
      }
    },


    "NATHTTPIngressSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Security Group for receiving traffic back from the NAT",
        "VpcId" : {"Ref" : "VPC"}
      }
    },

    "NATSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Enable SSH access via Bastion SG",
        "VpcId" : {"Ref" : "VPC"},
        "SecurityGroupIngress" : [ 
          { "IpProtocol" : "tcp", "FromPort" : "22", "ToPort" : "22", "SourceSecurityGroupId" : { "Ref" : "BastionSG" } },
          { "IpProtocol" : "icmp", "FromPort" : "-1", "ToPort" : "-1", "SourceSecurityGroupId" : { "Ref" : "BastionSG" } },
          { "IpProtocol" : "tcp", "FromPort" : "80", "ToPort" : "80", "SourceSecurityGroupId" : { "Ref" : "NATHTTPIngressSecurityGroup" } },
          { "IpProtocol" : "tcp", "FromPort" : "443", "ToPort" : "443", "SourceSecurityGroupId" : { "Ref" : "NATHTTPIngressSecurityGroup" } }
        ]
      }
    },

    "NATHTTPIngressSGNATIngress" : {
      "Type" : "AWS::EC2::SecurityGroupIngress",
      "Properties" : {
        "GroupId" : { "Ref" : "NATHTTPIngressSecurityGroup" },
        "IpProtocol" : "tcp",
        "FromPort" : "1",
        "ToPort" : "65535",
        "SourceSecurityGroupId" : { "Ref" : "NATSecurityGroup" }
      }
    },

    "PrivateSubnet1" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "AvailabilityZone" : { "Ref" : "AvailabilityZone1" },
        "CidrBlock" : { "Ref" : "PrivateCidrBlock1" }
      }
    },

    "PrivateSubnet2" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "AvailabilityZone" : { "Ref" : "AvailabilityZone2" },
        "CidrBlock" : { "Ref" : "PrivateCidrBlock2" }
      }
    },

    "PrivateRouteTable" : {
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "VpcId" : {"Ref" : "VPC"}
      }
    },

    "PrivateRouteTable2" : {
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "VpcId" : {"Ref" : "VPC"}
      }
    },

    "PrivateSubnetRouteTableAssociation1" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PrivateSubnet1" },
        "RouteTableId" : { "Ref" : "PrivateRouteTable" }
      }
    },
    
    "PrivateSubnetRouteTableAssociation2" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PrivateSubnet2" },
        "RouteTableId" : { "Ref" : "PrivateRouteTable2" }
      }
    },
    
    "PrivateNetworkAcl" : {
      "Type" : "AWS::EC2::NetworkAcl",
      "Properties" : {
        "VpcId" : {"Ref" : "VPC"}
      }
    },
    
    "PrivateInNetworkVPCAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : {"Ref" : "PrivateNetworkAcl"},
        "RuleNumber" : "31000",
        "Protocol" : "-1",
        "RuleAction" : "allow",
        "Egress" : "false",
        "CidrBlock" : { "Ref" : "VPCCidrBlock" },
        "PortRange" : {"From" : "1", "To" : "65535"}
      }
    },
    
    "PrivateInNetworkDNSAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : {"Ref" : "PrivateNetworkAcl"},
        "RuleNumber" : "31001",
        "Protocol" : "17",
        "RuleAction" : "allow",
        "Egress" : "false",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : {"From" : "53", "To" : "53"}
      }
    },
    
    "PrivateInNetworkEphemeralAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : {"Ref" : "PrivateNetworkAcl"},
        "RuleNumber" : "31002",
        "Protocol" : "6",
        "RuleAction" : "allow",
        "Egress" : "false",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : {"From" : "32768", "To" : "65535"}
      }
    },
    
    "PrivateInFromVPCHTTPAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : {"Ref" : "PrivateNetworkAcl"},
        "RuleNumber" : "31003",
        "Protocol" : "6",
        "RuleAction" : "allow",
        "Egress" : "false",
        "CidrBlock" : { "Ref" : "VPCCidrBlock" },
        "PortRange" : {"From" : "80", "To" : "80"}
      }
    },

    "PrivateInFromVPCHTTPSAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : {"Ref" : "PrivateNetworkAcl"},
        "RuleNumber" : "31004",
        "Protocol" : "6",
        "RuleAction" : "allow",
        "Egress" : "false",
        "CidrBlock" : { "Ref" : "VPCCidrBlock" },
        "PortRange" : {"From" : "443", "To" : "443"}
      }
    },

    "PrivateInFromVPCSSHSAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : {"Ref" : "PrivateNetworkAcl"},
        "RuleNumber" : "31005",
        "Protocol" : "6",
        "RuleAction" : "allow",
        "Egress" : "false",
        "CidrBlock" : { "Ref" : "VPCCidrBlock" },
        "PortRange" : {"From" : "22", "To" : "22"}
      }
    },
    
    "PrivateOutNetworkHTTPAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : {"Ref" : "PrivateNetworkAcl"},
        "RuleNumber" : "31000",
        "Protocol" : "6",
        "RuleAction" : "allow",
        "Egress" : "true",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : {"From" : "80", "To" : "80"}
      }
    },
   
    "PrivateOutNetworkHTTPSAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : {"Ref" : "PrivateNetworkAcl"},
        "RuleNumber" : "31001",
        "Protocol" : "6",
        "RuleAction" : "allow",
        "Egress" : "true",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : {"From" : "443", "To" : "443"}
      }
    },
  
    "PrivateOutNetworVPCAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : {"Ref" : "PrivateNetworkAcl"},
        "RuleNumber" : "31003",
        "Protocol" : "-1",
        "RuleAction" : "allow",
        "Egress" : "true",
        "CidrBlock" : { "Ref" : "VPCCidrBlock" },
        "PortRange" : {"From" : "1", "To" : "65535"}
      }
    },
  
    "PrivateOutNetworkDNSAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : {"Ref" : "PrivateNetworkAcl"},
        "RuleNumber" : "31004",
        "Protocol" : "17",
        "RuleAction" : "allow",
        "Egress" : "true",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : {"From" : "53", "To" : "53"}
      }
    },
    
    "PrivateSubnetNetworkAclAssocation1" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PrivateSubnet1" },
        "NetworkAclId" : {"Ref" : "PrivateNetworkAcl"}
      }
    },

    "PrivateSubnetNetworkAclAssocation2" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PrivateSubnet2" },
        "NetworkAclId" : {"Ref" : "PrivateNetworkAcl"}
      }
    },

    "SquidELBSG" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Squid Load Balancer - open to VPC on 80 and 443",
        "VpcId" : {"Ref" : "VPC"},
        "SecurityGroupIngress" : [ 
          { "IpProtocol" : "tcp", "FromPort" : "3128", "ToPort" : "3128", "CidrIp" : { "Ref" : "VPCCidrBlock" } }
        ]
      }
    },

    "SquidSG" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Squid Proxy Servers Security Group - SSH from Bastion 80 and 443 from SquidELBSG",
        "VpcId" : {"Ref" : "VPC"},
        "SecurityGroupIngress" : [ 
          { "IpProtocol" : "tcp", "FromPort" : "3128", "ToPort" : "3128", "SourceSecurityGroupId" : { "Ref" : "SquidELBSG" } },
          { "IpProtocol" : "tcp", "FromPort" : "3128", "ToPort" : "3128", "SourceSecurityGroupId" : { "Ref" : "SquidELBSG" } },
          { "IpProtocol" : "tcp", "FromPort" : "22", "ToPort" : "22", "SourceSecurityGroupId" : { "Ref" : "BastionSG" } },
          { "IpProtocol" : "icmp", "FromPort" : "-1", "ToPort" : "-1", "SourceSecurityGroupId" : { "Ref" : "BastionSG" } }
        ]
      }
    },

    "WebServiceELBSG" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Middle Tier Servers ELB - access from WebServerSG on 80 and 443",
        "VpcId" : {"Ref" : "VPC"},
        "SecurityGroupIngress" : [ 
          { "IpProtocol" : "tcp", "FromPort" : "80", "ToPort" : "80", "SourceSecurityGroupId" : { "Ref" : "WebServerSG" } },
          { "IpProtocol" : "tcp", "FromPort" : "443", "ToPort" : "443", "SourceSecurityGroupId" : { "Ref" : "WebServerSG" } }
        ]
      }
    },

    "WebServiceSG" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Middle Tier Servers - access from WebServiceELBSG on 80 and 443 - RDP and SSH from Bastion",
        "VpcId" : {"Ref" : "VPC"},
        "SecurityGroupIngress" : [ 
          { "IpProtocol" : "tcp", "FromPort" : "80", "ToPort" : "80", "SourceSecurityGroupId" : { "Ref" : "WebServiceELBSG" } },
          { "IpProtocol" : "tcp", "FromPort" : "443", "ToPort" : "443", "SourceSecurityGroupId" : { "Ref" : "WebServiceELBSG" } },
          { "IpProtocol" : "tcp", "FromPort" : "22", "ToPort" : "22", "SourceSecurityGroupId" : { "Ref" : "BastionSG" } },
          { "IpProtocol" : "tcp", "FromPort" : "3389", "ToPort" : "3389", "SourceSecurityGroupId" : { "Ref" : "BastionSG" } },
          { "IpProtocol" : "icmp", "FromPort" : "-1", "ToPort" : "-1", "SourceSecurityGroupId" : { "Ref" : "BastionSG" } }
        ]
      }
    }
  },

  "Outputs" : {

    "VPC" : {
      "Description" : "VPC",
      "Value" : {"Ref" : "VPC"}
    },

    "IGW" : {
      "Description" : "Internet Gateway",
      "Value" : {"Ref" : "InternetGateway"}
    },

    "Subnets" : {
      "Description" : "Subnets for use in other templates",
      "Value" : { "Fn::Join" : ["", [
        "DMZ:", { "Ref" : "DMZSubnet1" }, ",", { "Ref" : "DMZSubnet2" }, ".",
        "Private:", { "Ref" : "PrivateSubnet1" }, ",", { "Ref" : "PrivateSubnet2" }, "."
        ]]
      }
    },
    
    "SecurityGroups" : {
      "Description" : "Security Groups for use in other templates",
      "Value" : { "Fn::Join" : [ "", [
        "BastionSG:", { "Ref" : "BastionSG" }, ",",
        "WebELBSG:", { "Ref" : "WebELBSG" }, ",",
        "WebServerSG:", { "Ref" : "WebServerSG" }, ",",
        "NATHTTPIngressSecurityGroup:", { "Ref" : "NATHTTPIngressSecurityGroup" }, ",",
        "NATSecurityGroup:", { "Ref" : "NATSecurityGroup" }, ",",
        "SquidSG:", { "Ref" : "SquidSG" }, ",",
        "SquidELBSG:", { "Ref" : "SquidELBSG" }, ",",
        "WebServiceELBSG:", { "Ref" : "WebServiceELBSG" }, ",",
        "WebServiceSG:", { "Ref" : "WebServiceSG" }
        ]]
      }
    },
    
    "RouteTables" : {
      "Description" : "Route Tables for use in other templates",
      "Value" : { "Fn::Join" : [ "", [
        "DMZ:", { "Ref" : "DMZRouteTable" }, ".",
        "Private:", { "Ref" : "PrivateRouteTable" }, ",", { "Ref" : "PrivateRouteTable2" }, "."
        ]]
      }
    }

  }
}
